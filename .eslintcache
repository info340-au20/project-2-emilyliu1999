[{"/Users/Justin/info340/project2/project-2-emilyliu1999/src/index.js":"1","/Users/Justin/info340/project2/project-2-emilyliu1999/src/App.js":"2","/Users/Justin/info340/project2/project-2-emilyliu1999/src/login.js":"3","/Users/Justin/info340/project2/project-2-emilyliu1999/src/taskDetails.js":"4","/Users/Justin/info340/project2/project-2-emilyliu1999/src/schedule.js":"5"},{"size":991,"mtime":1608008701520,"results":"6","hashOfConfig":"7"},{"size":11431,"mtime":1608189916399,"results":"8","hashOfConfig":"7"},{"size":3253,"mtime":1608187603091,"results":"9","hashOfConfig":"7"},{"size":4138,"mtime":1608188457212,"results":"10","hashOfConfig":"7"},{"size":2136,"mtime":1608187603091,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"num4fm",{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"/Users/Justin/info340/project2/project-2-emilyliu1999/src/index.js",[],"/Users/Justin/info340/project2/project-2-emilyliu1999/src/App.js",["24","25","26","27","28","29"],"/Users/Justin/info340/project2/project-2-emilyliu1999/src/login.js",[],"/Users/Justin/info340/project2/project-2-emilyliu1999/src/taskDetails.js",["30"],"/Users/Justin/info340/project2/project-2-emilyliu1999/src/schedule.js",["31"],"import React, { useState } from 'react';\nimport 'firebase/auth';\nimport './css/style.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { Calendar } from 'react-calendar';\nimport { TaskList } from './App.js';\n\nexport function SchedulePage(props) {\n    let tasks = props.tasks;\n    const [date, onChange] = useState(new Date());\n    \n    let dateString = date.toString().slice(0, 15);\n\n    let currentTasks = [];\n    if (tasks) {\n        currentTasks = tasks.filter((task) => {\n            let deadline = task.deadline.slice(0, 15);\n            return deadline === dateString;\n        })\n    }\n\n    return (\n        <div className='content'>\n            <p>on this page, you may select dates on the calendar to see what tasks are due on any given day!</p>\n            <div className='row'>\n                <div className='row'>\n                    <div className='col d-flex'>\n                        <Calendar\n                            onChange={onChange}\n                            showWeekNumbers\n                            value={date}\n                        />\n                    </div>\n                    <div className='col d-flex'>\n                        <CurrentTaskCard tasks={currentTasks} isTaskList={true} date={date} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction CurrentTaskCard(props) {\n    let date = props.date.toString().slice(4, 10);\n    let todayTasks = props.tasks;\n\n    return (\n        <div className='card mb-4'>\n          <div className='card-header' role='navigation'>\n              <h2 className='mb-4'>{date}</h2>\n              <ul className='nav nav-tabs card-header-tabs'>\n                <li className='nav-item'>\n                    <a className={'nav-link active'} href='/#'>{'tasks'}</a>\n                </li>\n              </ul>\n          </div>\n    \n          <div className={'card-body ' + date + '-list'}>\n              <div className='row'>\n                  <div className='col-sm'>\n                      <TaskList tasks={todayTasks} />\n                  </div>\n              </div>\n          </div>\n        </div>\n      );\n}",["32","33"],{"ruleId":"34","severity":1,"message":"35","line":133,"column":11,"nodeType":"36","endLine":133,"endColumn":70},{"ruleId":"37","severity":1,"message":"38","line":141,"column":13,"nodeType":"36","endLine":141,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":142,"column":13,"nodeType":"36","endLine":142,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":143,"column":13,"nodeType":"36","endLine":143,"endColumn":26},{"ruleId":"39","severity":1,"message":"40","line":174,"column":6,"nodeType":"41","endLine":174,"endColumn":8,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":215,"column":9,"nodeType":"45","messageId":"46","endLine":215,"endColumn":14},{"ruleId":"39","severity":1,"message":"47","line":53,"column":6,"nodeType":"41","endLine":53,"endColumn":8,"suggestions":"48"},{"ruleId":"34","severity":1,"message":"49","line":53,"column":21,"nodeType":"36","endLine":53,"endColumn":54},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'taskRef'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-unused-vars","'tasks' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'queryString' and 'taskKey'. Either include them or remove the dependency array.",["55"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["56"],"no-negated-in-lhs",["57"],{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [taskRef]",{"range":"62","text":"63"},"Update the dependencies array to be: [queryString, taskKey]",{"range":"64","text":"65"},[5442,5444],"[taskRef]",[1790,1792],"[queryString, taskKey]"]